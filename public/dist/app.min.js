angular.module("Retrospection",["ui.router","btford.socket-io","ngAnimate","ngCookies"]),angular.module("Retrospection").controller("ActionItem",["$scope","$stateParams","AuthenticationService","ActionItemService","Socket","sprintDetails","teamMembers","actionItemsList",function(e,t,n,r,o,s,i,a){"use strict";e.authentication=n,e.actionItemsList=a.data,e.newActionItem={},e.actionItemNullError="",e.actionItemOwnerError="",e.teamMembers=i.data,e.isOwner=n.hasSprintAuthorization(s.data),e.addActionItem=function(){return e.newActionItem.title&&e.newActionItem.title.trim().length?e.newActionItem.owner?(e.newActionItem.owner=e.newActionItem.owner.email,e.newActionItem.sprint=t.sprintId,void r.saveActionItem(e.newActionItem).success(function(t){e.newActionItem={}})):void(e.actionItemOwnerError="Please select an owner for the action item"):void(e.actionItemNullError="Action Item can't be null")},o.on("actionItem.added",function(){r.getActionItemsBySprint(t.sprintId).success(function(t){e.actionItemsList=t})}),e.removeActionItem=function(e){r.deleteActionItem(e).success(function(e){})},e.updateActionItems=function(e){e.status=!e.status,r.updateActionItem(e).success(function(e){})}}]),angular.module("Retrospection").controller("Authentication",["$scope","AuthenticationService","$state","teams","$rootScope","AuthTokenService",function(e,t,n,r,o,s){"use strict";e.user={},e.authentication=t,e.teams=r.data,e.authentication.user&&n.go("profile"),o.$on("unauthorized",function(){t.user=null,n.go("signin")}),e.login=function(r){r&&t.login(e.user).then(function(t){t.data.user?(e.authentication.user=t.data.user,s.setToken(t.data.token),n.go("profile")):e.errorMessage=t.data.errorMsg})},e.signup=function(r){r&&t.signup(e.user).then(function(t){t.data.user?(e.authentication.user=t.data.user,s.setToken(t.data.token),n.go("profile")):e.errorMessage=t.data.errorMsg})}}]),angular.module("Retrospection").controller("Comments",["$scope","$stateParams","$state","$location","CommentsService","AuthenticationService",function(e,t,n,r,o,s){"use strict";e.listPosComments=[],e.listNegComments=[],e.newPosComment="",e.newNegComment="",e.isError=!1,e.errorMessage="",e.authentication=s,e.addToPosList=function(){var t=e.newPosComment.trim();t.length&&(e.listPosComments.push(t),e.newPosComment="",e.isError=e.isError&&!(e.listPosComments.length&&e.listNegComments.length))},e.addToNegList=function(){var t=e.newNegComment.trim();t.length&&(e.listNegComments.push(t),e.newNegComment="",e.isError=e.isError&&!(e.listPosComments.length&&e.listNegComments.length))},e.removeFromPos=function(t){e.listPosComments.splice(e.listPosComments.indexOf(t),1)},e.removeFromNeg=function(t){e.listNegComments.splice(e.listNegComments.indexOf(t),1)},e.submitComments=function(){if(e.addToPosList(),e.addToNegList(),0===e.listPosComments.length||0===e.listNegComments.length)return e.isError=!0,void(e.errorMessage="Please enter atleast one comment in both Positive and Negative section");var r={};r.positives=e.listPosComments,r.negatives=e.listNegComments,r.sprintId=t.sprintId,r.owner=e.authentication.user,o.submitComments(r).success(function(e){n.go("summaryView",{sprintId:t.sprintId})})}}]),angular.module("Retrospection").controller("Header",["$scope","AuthenticationService","$cookies","$state","AuthTokenService",function(e,t,n,r,o){"use strict";e.authentication=t,e.logout=function(){t.logout().success(function(){e.authentication.user=null,o.setToken(),r.go("signin")})}}]),angular.module("Retrospection").controller("PasswordHandler",["$scope","$state","AuthenticationService","tokenValidation",function(e,t,n,r){"use strict";e.resetRequestUserEmail="",e.resetRequestSuccessStatus="",e.resetRequestErrorStatus="",e.newPassword={},e.errorMessage="",e.isValidToken=r?r.data.isValid:!1,e.userId=r?r.data.userId:null,e.resetRequest=function(t){e.resetRequestErrorStatus="",e.resetRequestSuccessStatus="",t&&n.submitResetRequest(e.resetRequestUserEmail).success(function(t){t.success?e.resetRequestSuccessStatus="Weâ€™ve sent you an email "+e.resetRequestUserEmail+"containing a link that will allow you to reset your password for the next 24 hours.":e.resetRequestErrorStatus=t.errorMsg})},e.updatePassword=function(r){if(r){if(e.newPassword.value!==e.newPassword.confirmValue)return void(e.errorMessage="Both passwords should match");n.updatePassword(e.newPassword,e.userId).then(function(e){e.data.success&&t.go("signin")})}}}]),angular.module("Retrospection").controller("Profile",["AuthenticationService","Socket","ActionItemService","sprintData","actionItemsList","$scope","teamMembers",function(e,t,n,r,o,s,i){"use strict";s.latestSprint=r.data[0],s.actionItemsList=o.data,s.teamMembers=i,s.authentication=e,t.on("actionItem.added",function(){n.getActionItemsByUser(s.authentication.user.email).success(function(e){s.actionItemsList=e})}),s.updateActionItems=function(e){e.status=!e.status,n.updateActionItem(e).success(function(e){})}}]),angular.module("Retrospection").controller("Sprint",["$scope","$state","SprintService","AuthenticationService","sprintData",function(e,t,n,r,o){"use strict";e.authentication=r,e.sprint={},e.isError=!1,e.errorMessage="Sprint name can't be null",e.sprintData=o.data,e.createSprint=function(){var r=e.sprint.title;return r&&r.trim().length?(e.sprint.team=e.authentication.user.team,e.sprint.owner=e.authentication.user._id,void n.createSprint(e.sprint).success(function(e){t.go("addComments",{sprintId:e._id})})):void(e.isError=!0)}}]),angular.module("Retrospection").controller("Summary",["$scope","$state","$stateParams","CommentsService","Socket","AuthenticationService","comments","sprintDetails","teamMembers","isLoggedIn",function(e,t,n,r,o,s,i,a,c,u){"use strict";function m(){for(var t=0;t<e.comments.length;t++)for(var n=0;n<e.teamMembers.length;n++)e.teamMembers[n]._id===e.comments[t].owner&&(e.teamMembers[n].added=1)}e.teamMembers=c.data,e.authentication=s,e.comments=i.data,m(),e.isOwner=s.hasSprintAuthorization(a.data),o.on("comments.added",function(){r.getRetroComments(n.sprintId).success(function(t){e.comments=t,m()})}),e.removeCommentPositives=function(e,t){e.positives.splice(e.positives.indexOf(t),1),r.updateRetroComments(e)},e.removeCommentNegatives=function(e,t){e.negatives.splice(e.negatives.indexOf(t),1),r.updateRetroComments(e)},e.approveComments=function(){r.updateRetroCommentsBatch(e.comments)}}]),angular.module("Retrospection").controller("TeamManager",["$scope","$state","AuthenticationService","teams","Socket",function(e,t,n,r,o){e.authentication=n,e.teams=r.data,e.team={},e.newTeam={},e.createTeamSuccess=!1,e.createTeamError=!1,e.changeTeam=function(r){r&&n.updateTeam(e.team,e.authentication.user._id).then(function(e){e.data.success&&(n.user.team=e.data.user.team,t.go("profile"))})},o.on("team.added",function(){n.getTeamsList().then(function(t){e.teams=t.data})}),e.createTeam=function(t){t&&n.createTeam(e.newTeam).then(function(t){t.data.success?(e.createTeamSuccess=!0,e.newTeam.teamName=""):e.createTeamError=!0})}}]),angular.module("Retrospection").config(["$httpProvider",function(e){"use strict";e.interceptors.push("Interceptor")}]),angular.module("Retrospection").config(["$stateProvider","$urlRouterProvider",function(e,t){"use strict";e.state("profile",{url:"/main",resolve:{isLoggedIn:["AuthenticationService",function(e){return e.isLoggedIn()}],checkTeam:["AuthenticationService","isLoggedIn",function(e,t){return e.checkTeam(t.team)}],sprintData:["SprintService","isLoggedIn",function(e,t){return e.loadSprintsData(t.team)}],actionItemsList:["isLoggedIn","ActionItemService",function(e,t){return t.getActionItemsByUser(e.email)}],teamMembers:["AuthenticationService","isLoggedIn",function(e,t){return e.getSprintTeamMembers(t.team)}]},templateUrl:"views/user/profile.html",controller:"Profile"}).state("signup",{url:"/signup",resolve:{teams:["AuthenticationService",function(e){return e.getTeamsList()}]},templateUrl:"views/user/signup.html",controller:"Authentication"}).state("signin",{url:"/signin",resolve:{teams:["AuthenticationService",function(e){return e.getTeamsList()}]},templateUrl:"views/user/signin.html",controller:"Authentication"}).state("resetPasswordRequest",{url:"/resetpassword",resolve:{tokenValidation:function(){return null}},templateUrl:"views/user/password_reset.html",controller:"PasswordHandler"}).state("resetPasswordConfirm",{url:"/resetpassword/:resetToken",resolve:{tokenValidation:["AuthenticationService","$stateParams",function(e,t){return e.confirmResetRequest(t.resetToken)}]},templateUrl:"views/user/password_update.html",controller:"PasswordHandler"}).state("createSprint",{url:"/create",resolve:{isLoggedIn:["AuthenticationService",function(e){return e.isLoggedIn()}],checkTeam:["AuthenticationService","isLoggedIn",function(e,t){return e.checkTeam(t.team)}],sprintData:function(){return[]}},templateUrl:"views/sprint/create_sprint.html",controller:"Sprint"}).state("addComments",{url:"/:sprintId/comments",resolve:{isLoggedIn:["AuthenticationService",function(e){return e.isLoggedIn()}],checkTeam:["AuthenticationService","isLoggedIn",function(e,t){return e.checkTeam(t.team)}]},templateUrl:"views/sprint/add_comments.html"}).state("sprintView",{url:"/sprints",resolve:{isLoggedIn:["AuthenticationService",function(e){return e.isLoggedIn()}],checkTeam:["AuthenticationService","isLoggedIn",function(e,t){return e.checkTeam(t.team)}],sprintData:["SprintService","isLoggedIn",function(e,t){return e.loadSprintsData(t.team)}]},templateUrl:"views/sprint/show_sprints.html",controller:"Sprint"}).state("summaryView",{url:"/sprints/:sprintId",resolve:{isLoggedIn:["AuthenticationService",function(e){return e.isLoggedIn()}],checkTeam:["AuthenticationService","isLoggedIn",function(e,t){return e.checkTeam(t.team)}],comments:["$stateParams","CommentsService",function(e,t){return t.getRetroComments(e.sprintId)}],sprintDetails:["$stateParams","SprintService",function(e,t){return t.getSprintDetail(e.sprintId)}],teamMembers:["$stateParams","AuthenticationService","sprintDetails",function(e,t,n){return t.getSprintTeamMembers(n.data.team)}],actionItemsList:["$stateParams","ActionItemService",function(e,t){return t.getActionItemsBySprint(e.sprintId)}]},views:{"":{templateUrl:"views/sprint/summary_view.html"},"comments@summaryView":{templateUrl:"views/sprint/summary_view_comments.html",controller:"Summary"},"actionItems@summaryView":{templateUrl:"views/sprint/summary_view_action_items.html",controller:"ActionItem"}}}).state("teamChange",{url:"/team",resolve:{isLoggedIn:["AuthenticationService",function(e){return e.isLoggedIn()}],teams:["AuthenticationService","isLoggedIn",function(e){return e.getTeamsList()}]},templateUrl:"views/user/team_change.html",controller:"TeamManager"}).state("errorView",{url:"/errorView",templateUrl:"views/error_view.html"}),t.otherwise("/signin")}]),angular.module("Retrospection").run(["$state","$rootScope",function(e,t){t.$on("$stateChangeError",function(t,n,r,o,s,i){e.go("signin")})}]),angular.module("Retrospection").factory("ActionItemService",["$http",function(e){"use strict";var t={};return t.saveActionItem=function(t){return e.post("/actions",t)},t.getActionItemsBySprint=function(t){return e.get("/actions/sprint/"+t)},t.getActionItemsByUser=function(t){return e.get("/actions/user/"+t)},t.deleteActionItem=function(t){return e["delete"]("/actions/"+t._id)},t.updateActionItem=function(t){return e.put("/actions/"+t._id,t)},t}]),angular.module("Retrospection").factory("AuthTokenService",["$window",function(e){var t={};return t.getToken=function(){return e.localStorage.getItem("token")},t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token")},t}]),angular.module("Retrospection").factory("AuthenticationService",["$cookies","$http","SprintService","$q","$state","AuthTokenService",function(e,t,n,r,o,s){"use strict";var i={};return i.user=null,i.isLoggedIn=function(){var e=r.defer();return i.user?(e.resolve(i.user),e.promise):(s.getToken()?t.get("/users/me").success(function(t){i.user=t,i.user?e.resolve(i.user):e.reject(null)}):e.reject(null),e.promise)},i.checkTeam=function(e){var t=r.defer();return"Other"==e?(t.reject(null),o.go("teamChange")):t.resolve(!0),t.promise},i.login=function(e){return t.post("/auth/login",e)},i.signup=function(e){return t.post("/auth/signup",e)},i.logout=function(){return t.get("/auth/logout")},i.hasSprintAuthorization=function(e){return e.owner==i.user._id?!0:!1},i.getSprintTeamMembers=function(e){return t.get("/users/"+e)},i.submitResetRequest=function(e){return t.get("/resetpassword/user/"+e)},i.confirmResetRequest=function(e){return t.get("/resetpassword/"+e)},i.updatePassword=function(e,n){return t.post("/users/password/"+n,e)},i.getTeamsList=function(){return t.get("/teams")},i.createTeam=function(e){return t.post("/teams",e)},i.updateTeam=function(e,n){return t.post("/users/team/"+n,e)},i}]),angular.module("Retrospection").factory("CommentsService",["$http",function(e){"use strict";var t={};return t.submitComments=function(t){return e.post("/comments",t)},t.getRetroComments=function(t){return e.get("/"+t+"/comments")},t.updateRetroComments=function(t){e.put("/comments/"+t._id,t)},t.updateRetroCommentsBatch=function(t){var n;for(n in t)e.put("/comments/"+t[n]._id,t[n])},t}]),angular.module("Retrospection").factory("Interceptor",["$q","$injector","$rootScope","AuthTokenService",function(e,t,n,r){"use strict";var o={};return o.request=function(e){var t=r.getToken();return t&&(e.headers["x-access-token"]=t),e},o.responseError=function(r){switch(r.status){case 401:n.$broadcast("unauthorized"),t.get("$state").transitionTo("signin");break;case 400:t.get("$state").transitionTo("errorView")}return e.reject(r)},o}]),angular.module("Retrospection").factory("Socket",["socketFactory","$location",function(e,t){"use strict";return e({prefix:"",ioSocket:io.connect(t.protocol()+"://"+t.host()+":"+t.port())})}]),angular.module("Retrospection").factory("SprintService",["$http",function(e){"use strict";var t={};return t.createSprint=function(t){return e.post("/sprint",t)},t.loadSprintsData=function(t){return e.get("/sprint/team/"+t)},t.getSprintDetail=function(t){return e.get("/sprint/"+t)},t}]);